# This is a basic workflow to help you get started with Actions

name: 'ATS Portal Api'

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        type: string
        required: false
        description: 'Branch/tag (master will be used if empty'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Deploy_DEV:
    name: "Deploy / DEV"
    environment: DEVELOPMENT
    runs-on: ubuntu-latest
    outputs:
      run_number: ${{ fromJson(steps.query_run.outputs.response).run_number }}
    steps:
    - uses: haya14busa/action-cond@v1
      id: condval
      with:
        cond: ${{ env.BRANCH == '' }}
        if_true: 'master'
        if_false: '${{ github.event.inputs.branch }}'
        
    - name: "Build & Deploy / DEV"
      id: build_deploy_DEV
      uses: mathze/workflow-dispatch-action@v1.1.0
      with:
        owner: ApolloEnglishVN
        repo: APL.ATS.Portal.Api
        token: ${{ secrets.G_PERSONAL_ACCESS_TOKEN }}
        workflow-name: ats_portalapi_deploy_DEV_cicd.yml
        ref: steps.condval.outputs.value
        fail-on-error: true
        run-id: dummy
        
    - name: Query run from build_deploy_DEV
      id: query_run
      uses: fjogeleit/http-request-action@v1
      with:
        url: ${{ format('https://api.github.com/repos/{0}/{1}/actions/runs/{2}', 'ApolloEnglishVN', 'APL.ATS.Portal.Api', steps.build_deploy_DEV.outputs.run-id) }}
        method: 'GET'
        customHeaders: |
          {
            "accept": "application/vnd.github+json",
            "Authorization": "${{ format('token {0}', secrets.G_PERSONAL_ACCESS_TOKEN) }}"
          }

  Deploy_QC:
    name: "Deploy / QC"
    environment: QC
    runs-on: ubuntu-latest
    needs: Deploy_DEV
    steps:
    - uses: mathze/workflow-dispatch-action@v1.1.0
      with:
        owner: ApolloEnglishVN
        repo: APL.ATS.Portal.Api
        token: ${{ secrets.G_PERSONAL_ACCESS_TOKEN }}
        workflow-name: ats_portal_api_deploy_QC_cicd.yml
        ref: needs.Deploy_DEV.steps.condval.outputs.value
        fail-on-error: true
        run-id: dummy
        payload: |
          {
            "run_number": "${{ needs.Deploy_DEV.outputs.run_number }}"
          }
